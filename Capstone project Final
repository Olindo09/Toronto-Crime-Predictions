{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1y_qK54nIKPFycasnk9Tj_93xPaD-Zunv","authorship_tag":"ABX9TyOJ7HRoqdrfrHfSMVabA/Jk"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":3,"metadata":{"id":"ojKlje65xSbZ","executionInfo":{"status":"error","timestamp":1732572490926,"user_tz":300,"elapsed":3280,"user":{"displayName":"ornab olindo","userId":"05567744168547565836"}},"colab":{"base_uri":"https://localhost:8080/","height":575},"outputId":"66b2e738-f2ed-43ef-e241-e4f2cd861835"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: geopandas in /usr/local/lib/python3.10/dist-packages (1.0.1)\n","Requirement already satisfied: folium in /usr/local/lib/python3.10/dist-packages (0.18.0)\n","Requirement already satisfied: numpy>=1.22 in /usr/local/lib/python3.10/dist-packages (from geopandas) (1.26.4)\n","Requirement already satisfied: pyogrio>=0.7.2 in /usr/local/lib/python3.10/dist-packages (from geopandas) (0.10.0)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from geopandas) (24.2)\n","Requirement already satisfied: pandas>=1.4.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (2.2.2)\n","Requirement already satisfied: pyproj>=3.3.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (3.7.0)\n","Requirement already satisfied: shapely>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from geopandas) (2.0.6)\n","Requirement already satisfied: branca>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from folium) (0.8.0)\n","Requirement already satisfied: jinja2>=2.9 in /usr/local/lib/python3.10/dist-packages (from folium) (3.1.4)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from folium) (2.32.3)\n","Requirement already satisfied: xyzservices in /usr/local/lib/python3.10/dist-packages (from folium) (2024.9.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2>=2.9->folium) (3.0.2)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.4.0->geopandas) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.4.0->geopandas) (2024.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.4.0->geopandas) (2024.2)\n","Requirement already satisfied: certifi in /usr/local/lib/python3.10/dist-packages (from pyogrio>=0.7.2->geopandas) (2024.8.30)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->folium) (3.4.0)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->folium) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->folium) (2.2.3)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas>=1.4.0->geopandas) (1.16.0)\n"]},{"output_type":"error","ename":"FileNotFoundError","evalue":"File not found at /content/Neighbourhood_Crime_Rates_Open_Data_-5291801778870948764 (2).geojson. Please upload the file to the Colab session.","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mFileNotFoundError\u001b[0m                         Traceback (most recent call last)","\u001b[0;32m<ipython-input-3-9e54df7e85b1>\u001b[0m in \u001b[0;36m<cell line: 14>\u001b[0;34m()\u001b[0m\n\u001b[1;32m     15\u001b[0m     \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"File found at {file_path}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 17\u001b[0;31m     \u001b[0;32mraise\u001b[0m \u001b[0mFileNotFoundError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"File not found at {file_path}. Please upload the file to the Colab session.\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     18\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m \u001b[0;31m# Step 2: Load the GeoJSON file\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mFileNotFoundError\u001b[0m: File not found at /content/Neighbourhood_Crime_Rates_Open_Data_-5291801778870948764 (2).geojson. Please upload the file to the Colab session."]}],"source":["# Install necessary libraries\n","!pip install geopandas folium\n","\n","# Import libraries\n","import geopandas as gpd\n","import matplotlib.pyplot as plt\n","import folium\n","import os\n","\n","# Define the file path\n","file_path = '/content/Neighbourhood_Crime_Rates_Open_Data_-5291801778870948764 (2).geojson'\n","\n","# Step 1: Check if the file exists\n","if os.path.exists(file_path):\n","    print(f\"File found at {file_path}\")\n","else:\n","    raise FileNotFoundError(f\"File not found at {file_path}. Please upload the file to the Colab session.\")\n","\n","# Step 2: Load the GeoJSON file\n","try:\n","    gdf = gpd.read_file(file_path)\n","    print(\"GeoJSON file loaded successfully.\")\n","except Exception as e:\n","    raise ValueError(f\"Failed to read GeoJSON file: {e}\")\n","\n","# Step 3: Display the first few rows of the GeoDataFrame\n","print(\"First few rows of the data:\")\n","print(gdf.head())\n","\n","# Step 4: Static visualization using GeoPandas\n","print(\"Static visualization using GeoPandas:\")\n","gdf.plot(figsize=(10, 10), cmap='viridis', edgecolor='black')\n","plt.title(\"Neighborhood Crime Rates\")\n","plt.show()\n","\n","# Step 5: Create an interactive map using Folium\n","print(\"Interactive map using Folium:\")\n","map_center = [gdf.geometry.centroid.y.mean(), gdf.geometry.centroid.x.mean()]\n","crime_map = folium.Map(location=map_center, zoom_start=12)\n","\n","# Add the GeoJSON layer to the map\n","folium.GeoJson(gdf).add_to(crime_map)\n","\n","# Display the map\n","crime_map\n","\n","# Step 6: Save the modified GeoDataFrame back to a GeoJSON file (if needed)\n","output_path = \"/content/modified_crime_data.geojson\"\n","try:\n","    gdf.to_file(output_path, driver=\"GeoJSON\")\n","    print(f\"Modified GeoJSON file saved to {output_path}\")\n","except Exception as e:\n","    print(f\"Error saving GeoJSON file: {e}\")\n"]},{"cell_type":"code","source":[],"metadata":{"id":"BQgoaw74z37I"},"execution_count":null,"outputs":[]}]}